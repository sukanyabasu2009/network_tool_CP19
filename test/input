;; Global parameters

;; Change only if you are sure of what you are doing.
;; Split a node if it has more than these many ids

let $NODE_SPLIT_THRESHOLD 1

;; ******************************
;; DO NOT CHANGE THE NEXT 3 LINES
;; ******************************

let $ONLY_ACT_EDGES_TO_TARGET 1
let $ONLY_EXPR_EDGES_TO_TARGET 2
let $BOTH_ACT_EXPR_EDGES_TO_TARGET 0

;; 
;; To display SVG file on browser, use "dre 0 t 0 0 0 0 0 0 graph"
;; To display on xdot (searchable), use "exec xdot t_graph.dot" after
;; "dre 0 t 0 0 0 0 0 0 graph"

;; Timeouts in millisecs
;; timeout1: for incremental solver
;; timeout2: overall timeout

let $CONSTR_SOLVER_TIMEOUT1 120000
let $CONSTR_SOLVER_TIMEOUT2 300000

;; Coefficients and exponents for edge weights in min-cut based analysis
;; Currently not used.
;; DO NOT CHANGE UNLESS YOU ARE SURE 

let $COEFF1 1.0
let $EXP1 -1.0
let $COEFF2 1.0
let $EXP2 -1.0
let $COEFF3 1.0
let $EXP3 -1.0
let $COEFF4 1.0
let $EXP4 -1.0

;;
;; These files need to be updated for a new pathway database
;;
let $COMMON_FILES_DIR /home/sukanya/sukanya-cse-git-desktop/network_tool1/common_files
let $INTER_DB_MAP_FILE $COMMON_FILES_DIR/inter_db_mapping_file
let $HSA_TO_GENE_SYMBOL_MAP_FILE $COMMON_FILES_DIR/hsa_to_gene_symbol_map_6334.txt
let $HSA_PATH_TO_PATH_NAME_MAP_FILE $COMMON_FILES_DIR/hsa_path_to_path_name_map_2822.txt
let $LIST_OF_MERGED_XML_FILE $COMMON_FILES_DIR/list_of_kegg_xml_files_1.txt
let $NEW_LIST_OF_MERGED_XML_FILE $COMMON_FILES_DIR/list_of_kegg_xml_files_new.txt

;; **********************
;; Start of part that potentially needs to be changed for each experiment
;; **********************
let $WORK_DIR /home/sukanya/sukanya-cse-git-desktop/network_tool1/test
;; let $HSA_TO_GENE_SYMBOL_MAP_FILE $WORK_DIR/test_hsa_to_gene_symbol_map.txt
let $ADDITIONAL_EDGES_FILE $WORK_DIR/empty_file
let $MERGED_PATHWAYS_XML_FILE  $WORK_DIR/test1.xml
let $LOG_FOLD_CHANGE_FILE $WORK_DIR/fold_change
let $EDGES_TO_TARGET $BOTH_ACT_EXPR_EDGES_TO_TARGET
let $SRC_NODE hsa100
let $TGT_NODE hsa700
let $NODE_TO_TEST_FOR_SIGNIFICANCE hsa400
let $REACH_PATH_BOUND 8
let $EDGE_RELAX_LB 0
let $EDGE_RELAX_UB 0
let $NODE_RELAX_LB 0
let $NODE_RELAX_UB 0

;; **********************
;; Change the thresholds above to consider nodes as up-regulated or
;; down-regulated from fold-change values.
;; **********************
let $UP_REG_THRESH 1.5
let $DOWN_REG_THRESH -1.5
;;
;; End of part that potentially needs to be changed for each experiment
;;

;; **********************
;; Various file names
;; Change only if you are sure of what you are doing.
;; **********************

let $EXCEPTION_TO_NODE_MERGE_FILE $WORK_DIR/exception_file.txt
let $UP_REG_FILE $WORK_DIR/up_reg
let $DOWN_REG_FILE $WORK_DIR/down_reg
let $FILENAME_PREFIX $WORK_DIR/synth_


;; The following are empty files by default.
;; Change them only if you are sure of what you are doing.

let $ESSENTIAL_NODES_FILE $WORK_DIR/empty_file
let $AVOID_NODES_FILE $WORK_DIR/empty_file
let $ESSENTIAL_EDGES_FILE $WORK_DIR/empty_file
let $AVOID_EDGES_FILE $WORK_DIR/empty_file
let $ACTIVE_NODES_FILE $WORK_DIR/empty_file
let $INACTIVE_NODES_FILE $WORK_DIR/empty_file
let $CONFIRMED_UP_REG_FILE $WORK_DIR/empty_file
let $CONFIRMED_DOWN_REG_FILE $WORK_DIR/empty_file
let $RELAXED_NODES_FILE $WORK_DIR/empty_file
let $NONRELAXED_NODES_FILE $WORK_DIR/empty_file
let $RELAXED_EDGES_FILE $WORK_DIR/empty_file
let $NONRELAXED_EDGES_FILE $WORK_DIR/empty_file

;; create up-reg and down-reg files from fold change file and thresholds
cudf $LOG_FOLD_CHANGE_FILE $UP_REG_THRESH $DOWN_REG_THRESH $UP_REG_FILE $DOWN_REG_FILE
;;
exec cd $WORK_DIR; echo $SRC_NODE > src_file; echo $TGT_NODE > tgt_file
exec cd $WORK_DIR; cat $UP_REG_FILE $DOWN_REG_FILE src_file tgt_file > $EXCEPTION_TO_NODE_MERGE_FILE
exec cd $WORK_DIR; touch empty_file
;;
;; Read the following global files before starting execution of the pipeline
;;
start $INTER_DB_MAP_FILE $EXCEPTION_TO_NODE_MERGE_FILE $HSA_TO_GENE_SYMBOL_MAP_FILE $HSA_PATH_TO_PATH_NAME_MAP_FILE

;; ***********************************
;; Create new edges for the master network
;; THIS CHANGES $LIST_OF_MERGED_XML_FILE
;; UNCOMMENT mff COMMAND and wgx COMMAND BELOW.
;; ************************************
;; exec add $ADDITIONAL_EDGES_FILE $ADDITIONAL_EDGES_FILE.xml
;; exec rm $NEW_LIST_OF_MERGED_XML_FILE
;; exec cat $LIST_OF_MERGED_XML_FILE > $NEW_LIST_OF_MERGED_XML_FILE
;; exec echo "$ADDITIONAL_EDGES_FILE.xml" | cat >>  $NEW_LIST_OF_MERGED_XML_FILE

;; Merging kegg pathways to obtain master network.
;; ******************************
;; UNCOMMENT mff COMMAND BELOW IF YOU HAVE NEW FILES TO MERGE
;; ******************************
;; list_of_kegg_xml_files.txt: File with paths of xml files to be merged
;; xml : format is xml
;; Split a node if it has more than $NODE_SPLIT_THRESHOLD many ids
;; n: if these files were not previously written by the tool, otherwise 'y'
;; Merge only if operating with new pathways, else comment out the line below
;;
;; mff $NEW_LIST_OF_MERGED_XML_FILE xml $NODE_SPLIT_THRESHOLD n inter_db_mapping_file -1
;; size 0

;; Writing merged graph into xml file, end with string for pathway.
;; Currently using 'KEGG'. 
;; Write file if operating with new master network, else comment out the line below
;; ******************************
;; UNCOMMENT wgx COMMAND BELOW IF YOU HAVE NEW FILES TO MERGE AND ARE WRITING IT BACK
;; ******************************
;; wgx 0 $MERGED_PATHWAYS_XML_FILE KEGG
;; exit


;; *******************************
;; Starting analysis with $NODE_TO_TEST_FOR_SIGNIFICANCE included
;; *******************************

;;
;; Read file written in xml format
;;
rgx $MERGED_PATHWAYS_XML_FILE y $NODE_SPLIT_THRESHOLD
size 0


let $MERGED_PATHWAYS_GRAPH_NUM #LASTGRAPHNUM

;;
;; Reachability based pruning of paths
;;
fb_rch 0 $SRC_NODE -1 $TGT_NODE -1 -1 $REACH_PATH_BOUND $EDGES_TO_TARGET
size 0
;; dre 0 t 0 0 0 0 0 0 graph
;; exit

exec cd $WORK_DIR; echo $SRC_NODE $TGT_NODE > connect_pairs


;;
;; Find PO points
;;
pathz3 0 0 connect_pairs $EDGE_RELAX_LB $NODE_RELAX_LB $EDGE_RELAX_UB $NODE_RELAX_UB $REACH_PATH_BOUND $FILENAME_PREFIX $UP_REG_FILE $DOWN_REG_FILE $ESSENTIAL_NODES_FILE $AVOID_NODES_FILE $ESSENTIAL_EDGES_FILE $AVOID_EDGES_FILE $ACTIVE_NODES_FILE $INACTIVE_NODES_FILE $CONFIRMED_UP_REG_FILE $CONFIRMED_DOWN_REG_FILE $RELAXED_NODES_FILE $NONRELAXED_NODES_FILE $RELAXED_EDGES_FILE $NONRELAXED_EDGES_FILE $LOG_FOLD_CHANGE_FILE 1 1 $CONSTR_SOLVER_TIMEOUT1 $CONSTR_SOLVER_TIMEOUT2

;;
;; Plot PO points
;;
let $PO_POINTS_WITH_GENE PO_with_$NODE_TO_TEST_FOR_SIGNIFICANCE
exec mv limits_timefile.txt $PO_POINTS_WITH_GENE_limits_timefile.txt
exec mv PO.dat $PO_POINTS_WITH_GENE.dat
;; exec gnuplot -p -e "set xlabel 'Node relaxn'; set ylabel 'Edge relaxn'; set xrange [-0.5:$NODE_RELAX_UB+0.5]; set yrange [-0.5:$EDGE_RELAX_UB+0.5]; plot '$PO_POINTS_WITH_GENE.dat' with lp linecolor 'blue';exit"

;; ***************************************
;; Starting analysis with $NODE_TO_TEST_FOR_SIGNIFICANCE excluded
;; ***************************************

;;
;; Reachability based pruning of paths
;;
fb_rch $MERGED_PATHWAYS_GRAPH_NUM $SRC_NODE -1 $TGT_NODE -1 $NODE_TO_TEST_FOR_SIGNIFICANCE -1 $REACH_PATH_BOUND $EDGES_TO_TARGET
size 0


;;
;; Find PO points
;;
pathz3 0 0 connect_pairs $EDGE_RELAX_LB $NODE_RELAX_LB $EDGE_RELAX_UB $NODE_RELAX_UB $REACH_PATH_BOUND $FILENAME_PREFIX $UP_REG_FILE $DOWN_REG_FILE $ESSENTIAL_NODES_FILE $AVOID_NODES_FILE $ESSENTIAL_EDGES_FILE $AVOID_EDGES_FILE $ACTIVE_NODES_FILE $INACTIVE_NODES_FILE $CONFIRMED_UP_REG_FILE $CONFIRMED_DOWN_REG_FILE $RELAXED_NODES_FILE $NONRELAXED_NODES_FILE $RELAXED_EDGES_FILE $NONRELAXED_EDGES_FILE $LOG_FOLD_CHANGE_FILE 1 1 $CONSTR_SOLVER_TIMEOUT1 $CONSTR_SOLVER_TIMEOUT2 $PO_POINTS_WITH_GENE

;;
;; Plot PO points
;;
let $PO_POINTS_WITHOUT_GENE PO_without_$NODE_TO_TEST_FOR_SIGNIFICANCE
exec mv limits_timefile.txt $PO_POINTS_WITHOUT_GENE_limits_timefile.txt
exec mv PO.dat $PO_POINTS_WITHOUT_GENE.dat
exec gnuplot -p -e "set xlabel 'Node relaxn'; set ylabel 'Edge relaxn'; set xrange [-0.5:$NODE_RELAX_UB+0.5]; set yrange [-0.5:$EDGE_RELAX_UB+0.5]; plot '$PO_POINTS_WITH_GENE.dat' with lp linecolor 'blue'; replot '$PO_POINTS_WITHOUT_GENE.dat' with lp linecolor 'red'; exit"

exit
